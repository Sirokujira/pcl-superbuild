# Java Gradle CircleCI 2.0 configuration file
#
# Check https://circleci.com/docs/2.0/language-java/ for more details
#
version: 2
jobs:
  build:
    branches:
      only:
        - master
        - develop
    docker:
      # specify the version you desire here
      # - image: circleci/android:api-27-alpha
      - image: circleci/openjdk:8-jdk
      - image: bitriseio/android-ndk:latest

    environment:
      # Customize the JVM maximum heap limit
      JVM_OPTS: -Xmx3200m
      ADB_INSTALL_TIMEOUT: "10"
      ANDROID_ABIs: "x86"
      ANDROID_TARGET_API: "26"
      TOOLCHAIN_NAME: "x86-linux-android-clang3.6"
      TARGET_COMPILER: "clang"

    steps:
      - checkout

      # Download and cache dependencies
      - restore_cache:
          key: jars-{{ checksum "build.gradle" }}-{{ checksum  "chatmessageview/build.gradle" }}

      # https://discuss.circleci.com/t/licences-for-android-build-tools-not-accepted/17285
      # - run: sdkmanager --install "ndk-bundle"
      # - run: sdkmanager --licenses

      - run:
          name: update android sdk
          command: |
              echo y | android update sdk --no-ui --all --filter tool,extra-android-m2repository,extra-google-google_play_services,extra-google-m2repository,android-26
              echo y | android update sdk --no-ui --all --filter build-tools-26.0.0
      - run:
          name: cmake_configuration
          command: |
              mkdir build && cd build
              cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL="ON" -DBUILD_ANDROID:BOOL="ON" -DBUILD_IOS_DEVICE:BOOL="OFF" -DBUILD_IOS_SIMULATOR:BOOL="OFF" -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${ANDROID_NDK}/build/cmake/android.toolchain.cmake -DCMAKE_MAKE_PROGRAM=${ANDROID_NDK}/prebuilt/linux-x86_64/bin/make -DANDROID_TOOLCHAIN_NAME=${TOOLCHAIN_NAME} -DANDROID_NATIVE_API_LEVEL=${ANDROID_TARGET_API} -DANDROID_ABI=${ANDROID_ABIs} -DANDROID_TOOLCHAIN=${TARGET_COMPILER} ..

      - run:
          name: cmake_build
          command: cmake --build . --config Release


      # - save_cache:
      #     paths: ~/.gradle
      #     key: jars-{{ checksum "build.gradle" }}-{{ checksum  "pcl-superbuild/build.gradle" }}

      # run unit tests!
      # - run:
      #     name: unit test
      #     command: |
      #         ./gradlew test
      #         ./gradlew lint test
      # - run:
      #     name: Show list of system-images
      #     command: sdkmanager --list --verbose | grep system-images

      # - run:
      #     name: Distribute Bintray
      #     command: |
      #         if [ $CIRCLE_BRANCH = "master" ]; then
      #           sh ./deploy.sh
      #         else
      #           echo "Bintray distribution was skipped."
      #         fi

      # - run:
      #     name: Update version
      #     command: |
      #         if [ $CIRCLE_BRANCH = "master" ]; then
      #           sh ./version.sh
      #         else
      #           echo "Version update was skipped."
      #         fi
      # - store_test_results:
      #     path: example/build/test-results

      # - store_artifacts:
      #     path: example/build/reports
      #     destination: reports
