dist: trusty
sudo: required

cache:
  apt: true
  ccache: true
  directories:
    - $HOME/.ccache


addons:
  apt:
    sources:
      - george-edison55-precise-backports
    packages:
      - cmake-data
      - cmake

branches:
  only:
    - master
    - CITest

# Android NDK Toolchains
# https://developer.android.com/ndk/guides/standalone_toolchain.html?hl=ja
# global:
#   - GIT_TAG=<your version string>
#   - secure: <encrypted_gh_token>
env:
  global:
    - GIT_TAG="librarytest12"
    - secure: "kF66P+xYUADGdu9Yjty7DCeUIQbV10BdaSO5MoiiYy0hgItltPXeJdsqlkyFfcH7y4LWTwPfhdTEE5tCez+BL0yYJn9fqRGm2BDO5xaEDOaIEiwh98KpXAEUuhs5hRnZ5kFVEfI6kdTYwrYKTJQABr2PeBXZWWc51lGyC8aC18PAlFr4LC3d3vRa+e3IeSVyiYoScoZlacGe25UU4PVKI2KIsh6n9RUm6oEk4ptjanqhZjzF7JlbPsFly/3mxmMekQZMjW8KuX5BF+ZiO4KnFZ49pxs+6+68lf2kPtY3KeIZjrRak3mLucgN3bXnrRsAFrW3iXMftF7pFarRLeyupfKtwZMEv7LNGVfg/DivNCqCFKGAU+p1BCJJ3ae1bujMEF0qGSn2yT3ItFsEk0VPDFP5b76eEQpwqOt/R5vNE1+wox+lhJHTJVK1BctS1AT9ygKDKhkQvSCDUBX1OMdymB0KpualW16slj05asLyqPRXXxXtPWY0Wziil+z5B4A7Dk67D5GATrwR4ecINuaAu+PxB3ReqVAhLTGXuEZHEMd45Zv8KeJPcddbsqLvLiHJIYrcUtvOJLp4Iv+ZFFE2BNeoe/P1WGKd1x3w1Mc3nLr3ZQ6UZaSRVPtlZB6CLSxj3QsL74moW0EZ5iUzYzteoYV2aLeeKWsFrfbkzm01qJY="

matrix: 
   include: 
#      # - os: linux
#      #   language: cpp
#      #   compiler: gcc
#      #   env: ANDROID_ABIs="arm64-v8a"
#      #   env: ANDROID_TARGET_API="23"
#      #   env: TOOLCHAIN_NAME="aarch64-linux-android-4.9"
#      #   env: TARGET_COMPILER="gcc"
#      # 
#      # - os: linux
#      #   language: cpp
#      #   compiler: gcc
#      #   env: ANDROID_ABIs="armeabi-v7a"
#      #   env: ANDROID_TARGET_API="23"
#      #   env: TOOLCHAIN_NAME="arm-linux-androideabi-4.9"
#      #   env: TARGET_COMPILER="gcc"
#      # 
#      # - os: linux
#      #   language: cpp
#      #   compiler: gcc
#      #   env: ANDROID_ABIs="armeabi"
#      #   env: ANDROID_TARGET_API="23"
#      #   env: TOOLCHAIN_NAME="arm-linux-androideabi-4.9"
#      #   env: TARGET_COMPILER="gcc"
#      # 
#      # # - os: linux
#      # #   language: cpp
#      # #   compiler: gcc
#      # #   env: ANDROID_ABIs="x86_64"
#      # #   env: ANDROID_TARGET_API="23"
#      # #   env: TOOLCHAIN_NAME="x86_64-linux-android-4.9"
#      #     env: TARGET_COMPILER="gcc"
#      # # 
#      # # - os: linux
#      # #   language: cpp
#      # #   compiler: gcc
#      # #   env: ANDROID_ABIs="x86"
#      # #   env: ANDROID_TARGET_API="23"
#      # #   env: TOOLCHAIN_NAME="x86-4.9"
#      #     env: TARGET_COMPILER="gcc"
#      # 
#      # - os: osx
#      #   osx_image: xcode8.3
#      #   language: objective-c
#      #   compiler: gcc
#      #   # env: IOS_SDK_VERSION="iPhoneOS10.3.sdk"
#      #   # env: TARGET_COMPILER="clang"
#      #   xcode_sdk: iOS 10.3
#      # - os: osx
#      #   osx_image: xcode9
#      #   language: objective-c
#      #   compiler: gcc
#      #   # env: IOS_SDK_VERSION="iPhoneOS11.0.sdk"
#      #   # env: TARGET_COMPILER="clang"
#      #   xcode_sdk: iOS 11.0
# 
#      - os: linux
#        language: cpp
#        compiler: clang
#        env: ANDROID_ABIs="arm64-v8a"
#        env: ANDROID_TARGET_API="23"
#        env: TOOLCHAIN_NAME="aarch64-linux-android-clang3.6"
#        env: TARGET_COMPILER="clang"
#      
#      - os: linux
#        language: cpp
#        compiler: clang
#        env: ANDROID_ABIs="armeabi-v7a"
#        env: ANDROID_TARGET_API="23"
#        env: TOOLCHAIN_NAME="arm-linux-android-clang3.6"
#        env: TARGET_COMPILER="clang"
#      
#      - os: linux
#        language: cpp
#        compiler: clang
#        env: ANDROID_ABIs="armeabi"
#        env: ANDROID_TARGET_API="23"
#        env: TOOLCHAIN_NAME="arm-linux-android-clang3.6"
#        env: TARGET_COMPILER="clang"
#      
#      - os: linux
#        language: cpp
#        compiler: clang
#        env: ANDROID_ABIs="x86_64"
#        env: ANDROID_TARGET_API="23"
#        env: TOOLCHAIN_NAME="x86_64-linux-android-clang3.6"
#        env: TARGET_COMPILER="clang"
#      
#      - os: linux
#        language: cpp
#        compiler: clang
#        env: ANDROID_ABIs="x86"
#        env: ANDROID_TARGET_API="23"
#        env: TOOLCHAIN_NAME="x86-linux-android-clang3.6"
#        env: TARGET_COMPILER="clang"
# 
#      # - os: osx
#      #   osx_image: xcode8.3
#      #   language: objective-c
#      #   compiler: clang
#      #   # env: IOS_SDK_VERSION="iPhoneOS10.3.sdk"
#      #   # env: TARGET_COMPILER="clang"
#      #   xcode_sdk: iOS 10.3

     - os: osx
       osx_image: xcode9
       language: objective-c
       compiler: clang
       # env: IOS_SDK_VERSION="iPhoneOS11.0.sdk"
       # env: TARGET_COMPILER="clang"
       xcode_sdk: iOS 11.0

# iOS Image Setting : 
# https://blog.travis-ci.com/
# https://docs.travis-ci.com/user/osx-ci-environment/#Xcode-7.3.1
# https://docs.travis-ci.com/user/languages/objective-c
# https://github.com/timsutton/osx-vm-templates
# 
# Android NDK :
# http://dl.google.com/android/repository/android-ndk-r11c-windows-x86.zip
# http://dl.google.com/android/repository/android-ndk-r11c-windows-x86_64.zip
# wget http://dl.google.com/android/ndk/android-ndk-r8c-darwin-x86.tar.bz2
# tar -jxvf android-ndk-r8c-darwin-x86.tar.bz2
# cd android-ndk-r8c
###
# iOS?
# cmake -DBUILD_ANDROID:BOOL=OFF -DBUILD_IOS_DEVICE:BOOL=ON -BUILD_IOS_SIMULATOR:BOOL=OFF ../;
# Travis CI osx image?
# https://docs.travis-ci.com/user/osx-ci-environment/
# brew update >/dev/null;
# http://hkdnet.hatenablog.com/entry/2016/07/30/215925
#       cd $(brew --repository);
#       git fetch origin;
#       git reset --hard origin/master;
#       brew update;
# cmake -DBUILD_ANDROID:BOOL="OFF" -DBUILD_IOS_DEVICE:BOOL="ON" -BUILD_IOS_SIMULATOR:BOOL="OFF" ../;
###
# Boost Build?
# http://blog.livedoor.jp/tek_nishi/archives/7603570.html
# use?
# brew tap totakke/openni2;
# brew install openni2;
###
# mac on android?
# start
# wget http://dl.google.com/android/android-sdk_r24.0.2-linux.tgz;
# tar zxvf android-sdk_r24.0.2-linux.tgz;
# sudo mv android-sdk-linux/ /opt/;
# rm android-sdk_r24.0.2-linux.tgz;
# export ANDROID_HOME=/opt/android-sdk-linux;
# export PATH=${PATH}:$ANDROID_HOME/tools:$ANDROID_HOME/platform-tools;
# 
# Android
# cmake -DCMAKE_TOOLCHAIN_FILE=${ANDROID_NDK}/build/cmake/android.toolchain.cmake -DCMAKE_MAKE_PROGRAM=${ANDROID_NDK}/prebuilt/linux-x86_64/bin/make -DANDROID_NATIVE_API_LEVEL=${ANDROID_TARGET_API} -DANDROID_ABI=${ANDROID_ABIs} -DANDROID_TOOLCHAIN=${compiler} ..
# export PATH=$ANDROID_NDK/toolchains/${TOOLCHAIN_NAME}/prebuilt/linux-x86_64/bin:$PATH;
# add virtual memory
# - dd if=/dev/zero of=/swapfile bs=1024 count=4194304;
###
# before cmake file(osx)
# cmake -DBUILD_ANDROID:BOOL="OFF" -DBUILD_IOS_DEVICE:BOOL="ON" -DBUILD_IOS_SIMULATOR:BOOL="ON" -DCMAKE_IOS_SDK_ROOT:FILEPATH="/Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/$IOS_SDK_VERSION" ../;
# cmake 3.9 FindCUDA Error
# /usr/local/Cellar/cmake/3.9.4/share/cmake/Modules/FindCUDA.cmake:694 (cuda_find_host_program)
# mkdir .tmp;
# curl -L https://github.com/ninja-build/ninja/releases/download/v1.8.2/ninja-linux.zip -o .tmp/ninja-linux.zip;
# unzip .tmp/ninja-linux.zip -d .tmp;
# export PATH=$PATH:$PWD/.tmp
# use ccache?
# https://docs.travis-ci.com/user/caching/
# http://www.brianlheim.com/2017/08/20/supercollider-travisci.html
# ccache ng?(sim/device obj file arch mismatch?) - arm7s error(arg?)
# cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL="ON" -DBUILD_ANDROID:BOOL="OFF" -DBUILD_IOS_DEVICE:BOOL="ON" -DBUILD_IOS_SIMULATOR:BOOL="ON" ../;
# envronment parameter check
# xcodebuild -showBuildSettings;
# bash ../makeFramework.sh device;
# bash ../makeFramework.sh universal;
# bash build-sim64.sh;
before_install:
  - if [[ $TRAVIS_OS_NAME = "osx" ]]; then
      rvm get stable;
      brew prune;
      brew update >/dev/null;
      brew install llvm;
      brew install ninja;

      brew install ccache;
      export PATH="/usr/local/opt/ccache/libexec:$PATH";

      mkdir build && cd build;

      cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL="ON" -DBUILD_ANDROID:BOOL="OFF" -DBUILD_IOS_DEVICE:BOOL="OFF" -DBUILD_IOS_DEVICE_ARM64:BOOL="ON" -DBUILD_IOS_DEVICE_ARMV7:BOOL="OFF" -DBUILD_IOS_DEVICE_ARMV7S:BOOL="OFF" -DBUILD_IOS_SIMULATOR:BOOL="ON" -DBUILD_IOS_SIMULATOR_I386:BOOL="OFF" ../;

      travis_wait 50 cmake --build . --config Release;

      cd ../iOSWrapper;
      bash build-ios.sh;
      bash build-sim64.sh;

      cd ../build;
      bash ../makeFramework.sh universal;

      cd ../iOSWrapper;
      bash build-test.sh;
    fi

  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      wget -qO- http://dl.google.com/android/repository/android-ndk-r16b-linux-x86_64.zip -O /tmp/android-ndk-r16b-linux-x86_64.zip;
      unzip -q /tmp/android-ndk-r16b-linux-x86_64.zip;
      cd android-ndk-r16b;
      export ANDROID_NDK=$PWD;
      cd ..;

      sudo dd if=/dev/zero of=/swapfile bs=1024 count=4194304;
      sudo mkswap /swapfile;
      sudo swapon /swapfile;

      mkdir build;
      cd build;
      cmake -DCMAKE_VERBOSE_MAKEFILE:BOOL="ON" -DBUILD_ANDROID:BOOL="ON" -DBUILD_IOS_DEVICE:BOOL="OFF" -DBUILD_IOS_SIMULATOR:BOOL="OFF" -DCMAKE_TOOLCHAIN_FILE:FILEPATH=${ANDROID_NDK}/build/cmake/android.toolchain.cmake -DCMAKE_MAKE_PROGRAM=${ANDROID_NDK}/prebuilt/linux-x86_64/bin/make -DANDROID_TOOLCHAIN_NAME=${TOOLCHAIN_NAME} -DANDROID_NATIVE_API_LEVEL=${ANDROID_TARGET_API} -DANDROID_ABI=${ANDROID_ABIs} -DANDROID_TOOLCHAIN=${TARGET_COMPILER} ..;

      travis_wait 50 cmake --build . --config Release;
    fi


# install:
#   - travis_wait 60 make -j4 VERBOSE=1 2>&1
# - ls
# The command "rake" exited with 1.
# - if [[ $TRAVIS_OS_NAME = "osx" ]]; then
#   bash ../iOSWrapper/build-ios.sh;
#   bash ../makeFramework.sh device;
# fi
script:
    - echo "end"

# cache upload
# after_success:
#     - zip -r pcl-releases-$TRAVIS_OS_NAME-$GIT_TAG.zip ./CMakeExternals/Install


# cache upload
# https://github.com/vgvassilev/cling/blob/master/.travis.yml
# after_failure:
#     - cat ./CMakeExternals/Build/pcl-ios-device/CMakeFiles/CMakeOutput.log
#     - cat ./CMakeExternals/Build/pcl-ios-device/CMakeFiles/CMakeError.log
#     - cat ./CMakeExternals/Build/pcl-ios-simulator/CMakeFiles/CMakeOutput.log
#     - cat ./CMakeExternals/Build/pcl-ios-simulator/CMakeFiles/CMakeError.log
after_failure: 
  - echo "Dumping CMakeOutput.log" 

  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/boost-ios-device/CMakeFiles/CMakeOutput.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/boost-ios-simulator/CMakeFiles/CMakeOutput.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/flann-ios-device/CMakeFiles/CMakeOutput.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/flann-ios-simulator/CMakeFiles/CMakeOutput.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/qhull-ios-device/CMakeFiles/CMakeOutput.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/qhull-ios-simulator/CMakeFiles/CMakeOutput.log 

  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/pcl-ios-device/CMakeFiles/CMakeOutput.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/pcl-ios-simulator/CMakeFiles/CMakeOutput.log 
  - echo "Dumping CMakeError.log" 
  # - cat /home/travis/ci/build/builddir/CMakeFiles/CMakeError.log 
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/boost-ios-device/CMakeFiles/CMakeError.log
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/boost-ios-simulator/CMakeFiles/CMakeError.log
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/flann-ios-device/CMakeFiles/CMakeError.log
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/flann-ios-simulator/CMakeFiles/CMakeError.log
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/qhull-ios-device/CMakeFiles/CMakeError.log
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/qhull-ios-simulator/CMakeFiles/CMakeError.log

  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/pcl-ios-device/CMakeFiles/CMakeError.log
  - cat /home/travis/build/Sirokujira/pcl-superbuild/build/CMakeExternals/Build/pcl-ios-simulator/CMakeFiles/CMakeError.log

  - echo "Dumping `which ccache`" 
  - ccache -s 
  - ls -la /usr/lib/ccache/ || ls -la /usr/local/opt/ccache/libexec 


# - zip -q packages/pcl-rleases-$GIT_TAG.zip -r ./CMakeExternals/Install
# - tar czf packages/pcl-releases-$GIT_TAG.tar.gz ./CMakeExternals/Install
# - zip -q packages/pcl-releases-$GIT_TAG.zip -r ./CMakeExternals/Install
# - zip -q packages/pcl-releases-frameworks-$TRAVIS_XCODE_SDK-$GIT_TAG.zip -r ./CMakeExternals/Install/frameworks
# - zip -q packages/pcl-releases-frameworks-$GIT_TAG.zip -r ./CMakeExternals/Install/frameworks-device
# - zip -q packages/pcl-releases-frameworks-$GIT_TAG.zip -r ./CMakeExternals/Install/frameworks-simulator
before_deploy:
   - mkdir packages
   - zip -q packages/pcl-releases-frameworks-$GIT_TAG.zip -r ./CMakeExternals/Install/frameworks-universal
   - git config --global user.name "Sirokujira"
   - git config --global user.email "toru753@gmail.com"
   - git tag $GIT_TAG -a -m "Commit from Travis CI for build $TRAVIS_BUILD_NUMBER"
   - git push --quiet https://$GH_TOKEN@github.com/Sirokujira/pcl-superbuild.git --tags 2> /dev/null


# - packages/pcl-releases-$TRAVIS_XCODE_SDK-$GIT_TAG.tar.gz
# - packages/pcl-releases-$TRAVIS_XCODE_SDK-$GIT_TAG.zip
deploy:
  provider: releases
  skip_cleanup: true
  api_key: 
    secure: "nVLOBizFgvnJvKssHPJfeN5AtQKrdZE/EDHtr1UC5PJNqZNdCAr8DcQS0hj6bRZ3iYfb+qn4OZV/HOfG/GY46N4CoFuNaOVFqajSZsheF01zvHob3/7bK7EXCybk8QzUIDAV77JjZiQacXJtX0asHPDAgJBScxU1KEC4osaxRy2p3ebw5JURFQArpt8vvK0180ZkH6E0A6qrsBBvaXUPTQ7gM0t/sDhSrPunu0zjKeHPe8VeUp/ELx4fohdiQGSRzf7X7Jmph3dXNSgJb4UBULWvBoQnmUlRCMfqPOkpsbEWWo/ZaaWb0N48GH0RtSIHX+Oampu8SFRvcQVNBSZMPbw+CTaA0Ij1mMhRQgqgjEroiX3y1WOxcT7eiZtwDToUQnm2CqbiTszm5d/bWY4Z3ln4CyiFLUDjTrjD/z4FJi6sgRNMOybo4tAYixuhI4f4wdRRwYOdM9a919LEgM8XltxO+H0KgqDeVjOdmLinxQ9XefZs3k6uRQuEfDIkoyRopt7wKmbhzgs9tOZuEVySxJAFOU17iPvn/BrjU9/g+MRRbnxuajPSPia7/09uHZ7IJJSMK35qvlBjohnVbY6ZHKjTFw3QjOrH7DYATAHvr9XyKlmKIzeubVRzeK9k932WweCa1ySro+kpoJVxwxDs6XnyPe/nnjkt4FovGJNIJLA="
  file:
      - packages/pcl-releases-frameworks-$GIT_TAG.zip
  on:
      tags: false
      branch: master

