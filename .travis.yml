cache:
  apt: true

matrix: 
   include: 
#      - os: linux
#        language: cpp
#        compiler: gcc
# #        addons:
# #          apt:
# #            sources:
# #              - ubuntu-toolchain-r-test
# #              - george-edison55-precise-backports
# #            packages: 
# #              - g++-4.9
# #              - cmake
# #              - cmake_data
# #              - libgtest-dev
# #              - doxygen-latex
# #              - libusb-1.0-0-dev
     - os: osx
       osx_image: xcode7.3
       language: objective-c
       # compiler: clang++
       compiler: gcc
       # compiler: clang
#        addons:
#          apt:
#            sources:
#              - ubuntu-toolchain-r-test
#              - george-edison55-precise-backports
#            packages: 
#              - g++-4.9
#              - cmake
#              - cmake_data
#              - libgtest-dev
#              - doxygen-latex
#              - libusb-1.0-0-dev
#        env: COMPILER=g++-4.9
#        # env: COMPILER=g++-5

#      - os: osx
#        osx_image: xcode7.1
#        compiler: clang
#        addons: 
#          apt: 
#           sources:
#             - ubuntu-toolchain-r-test
#             - llvm-toolchain-precise-3.6
#             - george-edison55-precise-backports
#           packages:
#             - clang-3.6
#             - cmake
#             - cmake_data
#             - libgtest-dev
#             - doxygen-latex
#             - libusb-1.0-0-dev
#        env: COMPILER=clang++-3.6
#        # env: COMPILER=clang++-3.7

# cache: 
#        directories: 
#          - $HOME/flann 
#          - $HOME/vtk 
#          - $HOME/qhull 
#          - $HOME/doxygen 

# iOS Image Setting : 
# https://blog.travis-ci.com/
# https://docs.travis-ci.com/user/osx-ci-environment/#Xcode-7.3.1
# https://docs.travis-ci.com/user/languages/objective-c
# https://github.com/timsutton/osx-vm-templates
# 
# Android NDK :
# http://dl.google.com/android/repository/android-ndk-r11c-windows-x86.zip
# http://dl.google.com/android/repository/android-ndk-r11c-windows-x86_64.zip
# wget http://dl.google.com/android/ndk/android-ndk-r8c-darwin-x86.tar.bz2
# tar -jxvf android-ndk-r8c-darwin-x86.tar.bz2
# cd android-ndk-r8c
# CMake Update(NG)
# sudo apt-get install software-properties-common;
# sudo add-apt-repository ppa:george-edison55/cmake-3.x;
# sudo apt-get update;
# travis_wait 45 sudo apt-get install cmake;
# cmake --version;
# if [ "$CXX" = "clang++" ]; then export CXXFLAGS="-std=c++11 -arch armv7s -isysroot /Applications/Xcode6-Beta6.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS8.0.sdk";
# if [ "$CXX" = "clang++" ]; then export CXX="clang++-3.7" CC="clang-3.7";
# export IOS_PLATFORM_LOCATION="OS";
# export CXXFLAGS="-std=c++11 -arch armv7s -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.1.sdk";
# if ng
# cmake -DBUILD_ANDROID:BOOL=OFF -DBUILD_IOS_DEVICE:BOOL=ON -BUILD_IOS_SIMULATOR:BOOL=OFF ../;
# Travis CI osx image?
# https://docs.travis-ci.com/user/osx-ci-environment/
# brew update >/dev/null;
# http://hkdnet.hatenablog.com/entry/2016/07/30/215925
#       cd $(brew --repository);
#       git fetch origin;
#       git reset --hard origin/master;
#       brew update;
# cmake -DBUILD_ANDROID:BOOL="OFF" -DBUILD_IOS_DEVICE:BOOL="ON" -BUILD_IOS_SIMULATOR:BOOL="OFF" ../;
# CMake 3.6.2
# wget --no-check-certificate -qO- https://cmake.org/files/v3.6/cmake-3.6.2-Darwin-x86_64.tar.gz -O /tmp/cmake-3.6.2-Darwin-x86_64.tar.gz;
# tar -xvf /tmp/cmake-3.6.2-Darwin-x86_64.tar.gz;
# export PATH=$PWD/cmake-3.6.2-Darwin-x86_64/bin/:$PATH;
# 
###
# 
# export IOS_PLATFORM_LOCATION="OS";
# export CXXFLAGS="-std=c++11 -arch armv7 armv7s arm64 -isysroot /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS9.1.sdk";
# 
# xcode-select -print-path;
# old()
# brew tap homebrew/boneyard;
# brew install clang-omp;
# export C_INCLUDE_PATH=/usr/local/Cellar/libiomp/!date!/include/libiomp:$C_INCLUDE_PATH;
# export CPLUS_INCLUDE_PATH=/usr/local/Cellar/libiomp/!date!/include/libiomp:$CPLUS_INCLUDE_PATH;
# export LIBRARY_PATH=/usr/local/Cellar/libiomp/!date!/lib:$LIBRARY_PATH;
# 
# brew install llvm;
# travis-ci use ng alias
# alias clang-omp='/usr/local/opt/llvm/bin/clang -fopenmp -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib';
# alias clang-omp++='/usr/local/opt/llvm/bin/clang++ -fopenmp -L/usr/local/opt/llvm/lib -Wl,-rpath,/usr/local/opt/llvm/lib';
# Boost Build?
# http://blog.livedoor.jp/tek_nishi/archives/7603570.html
# sudo ln -s /Applications/Xcode.app/Contents/Developer/Platforms/iPhoneOS.platform/Developer/SDKs/iPhoneOS6.1.sdk/usr/include /usr/include/arm

before_install:
  - if [[ $TRAVIS_OS_NAME = "osx" ]]; then
      brew prune;
      brew update >/dev/null;
      
      brew tap totakke/openni2;
      brew install openni2;
      
      mkdir build && cd build;
      cmake -DBUILD_ANDROID:BOOL="OFF" -DBUILD_IOS_DEVICE:BOOL="ON" -DBUILD_IOS_SIMULATOR:BOOL="OFF" ../;
    fi

  - if [[ $TRAVIS_OS_NAME = "linux" ]]; then
      wget --no-check-certificate -qO- http://www.cmake.org/files/v3.6/cmake-3.6.2-Linux-x86_64.tar.gz -O /tmp/cmake-3.6.2-Linux-x86_64.tar.gz;
      tar -xvf /tmp/cmake-3.6.2-Linux-x86_64.tar.gz;
      export PATH=$PWD/cmake-3.6.2-Linux-x86_64/bin/:$PATH;
      
      wget http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip;
      unzip -q android-ndk-r11c-linux-x86_64.zip;
      cd android-ndk-r11c;
      export ANDROID_NDK=$PWD;
      
      cd ..;
      mkdir build;
      cd build;
      cmake ../;
    fi

# install:
#   - travis_wait 60 make -j4 VERBOSE=1 2>&1

script:
    - travis_wait 60 make -j4 VERBOSE=1 2>&1

# after_success:
#     - zip -r pcl-superbuild_ios_library.zip ./CMakeExternals/Install

after_failure:
    - cat ./CMakeExternals/Build/pcl-ios-device/CMakeFiles/CMakeOutput.log
    - cat ./CMakeExternals/Build/pcl-ios-device/CMakeFiles/CMakeError.log

# - zip -q packages/pcl-rleases-$GIT_TAG.zip -r ./CMakeExternals/Install
before_deploy:
    - mkdir packages
    - tar czf packages/pcl-releases-$GIT_TAG.tar.gz $(ls -I packages)
    - zip -q packages/pcl-releases-$GIT_TAG.zip -r $(ls -I packages)

deploy:
  provider: releases
  skip_cleanup: true
  api_key: e6657f1b7c914a776ce5c75fd0526309fcd868bf
  file:
    - packages/pcl-releases-$GIT_TAG.tar.gz
    - packages/pcl-releases-$GIT_TAG.zip
  on:
    tags: true
    branch: master

